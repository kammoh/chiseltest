name: Continuous Integration

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  test:
    name: test on ubuntu
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        scala: [2.13.15]
        jvm: [11, 23]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Scala
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: ${{ matrix.jvm }}
      - name: Test
        timeout-minutes: 10
        run: ./mill chiseltest.test.testOnly 'chiseltest.*' -- -l RequiresVcs -l RequiresVerilator -l Formal -l RequiresIcarus

  integration-test:
    name: Integration Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        scala: [ 2.13.15 ]
        jvm: [ 11, 21, 23 ]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Scala
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: ${{ matrix.jvm }}
      - name: Test
        timeout-minutes: 10
        run: ./mill chiseltest.test.testOnly 'integration.*"

  test-mac:
    name: mill test on mac
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Verilator for MacOS
        if: runner.os == 'macOS'
        run: |
          brew install verilator
          verilator --version || true
      - name: Test
        timeout-minutes: 20
        run: ./mill chiseltest.test.testOnly 'chiseltest.*' -- -l RequiresVcs -l Formal -l RequiresIcarus

  icarus:
    name: icarus verilog
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest ]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Icarus Verilog for Ubuntu
        if: runner.os == 'Linux'
        run: |
          sudo apt-get install -y iverilog
          iverilog -v || true
      - name: Install Icarus Verilog for MacOS
        if: runner.os == 'macOS'
        run: |
          brew install icarus-verilog
          iverilog -v || true
      - name: Test
        timeout-minutes: 10
        run: ./mill chiseltest.test.testOnly 'chiseltest.*' -- -n RequiresIcarus

  verilator:
    name: verilator regressions
    runs-on: ubuntu-latest
    strategy:
      matrix:
        version: ["5.020", "5.030"]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Verilator Build Dependencies
        run: sudo apt-get install -y git make autoconf g++ flex bison libfl2 libfl-dev help2man
      - name: Cache Verilator ${{ matrix.version }}
        uses: actions/cache@v3
        id: cache-verilator
        with:
          path: verilator-${{ matrix.version }}
          key: ${{ runner.os }}-verilator-${{ matrix.version }}
      - name: Compile Verilator ${{ matrix.version }}
        if: steps.cache-verilator.outputs.cache-hit != 'true'
        run: |
          wget https://github.com/verilator/verilator/archive/refs/tags/v${{ matrix.version }}.zip
          unzip v${{ matrix.version }}.zip
          cd verilator-${{ matrix.version }}
          autoconf
          ./configure
          make
      - name: Install Verilator ${{ matrix.version }}
        run: |
          cd verilator-${{ matrix.version }}
          sudo make install
          verilator --version
      - name: Test
        run: ./mill chiseltest.test.testOnly 'chiseltest.*' -n RequiresVerilator

  formal:
    name: formal verification tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        backend: [z3, cvc4, btormc, bitwuzla]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Z3 and CVC4
        if: runner.os == 'Linux'
        run: |
          sudo apt-get install -y z3 cvc4
          z3 --version
          cvc4 --version
      - name: Install Tabby OSS Cad Suite (from YosysHQ)
        uses: ./.github/workflows/setup-oss-cad-suite
        with:
          osscadsuite-version: '2024-12-31'
      - name: Test
        run: ./mill chiseltest.test.testOnly 'chiseltest.*' -n Formal -Dformal_engine=${{ matrix.backend }}

  formal-mac:
    name: formal verification tests on mac
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Z3 for MacOS
        run: |
          brew install z3
          z3 --version
      - name: Test
        run: ./mill chiseltest.test.testOnly 'chiseltest.*' -n Formal -Dformal_engine=z3


  # no-warn:
  #   name: No Warnings with Scala 2.13 for PRs
  #   if: github.event_name == 'pull_request'
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3
  #     - name: Check for Warnings
  #       run: sbt "set ThisBuild / scalacOptions ++= Seq(\"-Xfatal-warnings\") ; compile"
  #     - name: Check for Warnings in Tests
  #       run: sbt "set ThisBuild / scalacOptions ++= Seq(\"-Xfatal-warnings\") ; Test / compile"

  # Sentinel job to simplify how we specify which checks need to pass in branch
  # protection and in Mergify
  #
  # When adding new jobs, please add them to `needs` below
  all_tests_passed:
    name: "all tests passed"
    needs: [test, verilator, formal, formal-mac, icarus, test-mac, integration-test]
    runs-on: ubuntu-latest
    steps:
      - run: echo Success!
